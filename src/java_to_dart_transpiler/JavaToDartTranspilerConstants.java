/* Generated By:JavaCC: Do not edit this line. JavaToDartTranspilerConstants.java */
package java_to_dart_transpiler;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JavaToDartTranspilerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int READ = 5;
  /** RegularExpression Id. */
  int PRINT = 6;
  /** RegularExpression Id. */
  int IFSYMBOL = 7;
  /** RegularExpression Id. */
  int ELSESYMBOL = 8;
  /** RegularExpression Id. */
  int FORSYMBOL = 9;
  /** RegularExpression Id. */
  int WHILESYMBOL = 10;
  /** RegularExpression Id. */
  int RETURNSYMBOL = 11;
  /** RegularExpression Id. */
  int VOIDSYMBOL = 12;
  /** RegularExpression Id. */
  int INTSYMBOL = 13;
  /** RegularExpression Id. */
  int STRINGSYMBOL = 14;
  /** RegularExpression Id. */
  int BOOLEAN = 15;
  /** RegularExpression Id. */
  int TRUE = 16;
  /** RegularExpression Id. */
  int FALSE = 17;
  /** RegularExpression Id. */
  int PLUS = 18;
  /** RegularExpression Id. */
  int MINUS = 19;
  /** RegularExpression Id. */
  int MULTIPLY = 20;
  /** RegularExpression Id. */
  int DIVIDE = 21;
  /** RegularExpression Id. */
  int MODULO = 22;
  /** RegularExpression Id. */
  int AND = 23;
  /** RegularExpression Id. */
  int OR = 24;
  /** RegularExpression Id. */
  int EQUALS = 25;
  /** RegularExpression Id. */
  int NOT_EQUALS = 26;
  /** RegularExpression Id. */
  int LESS_THAN = 27;
  /** RegularExpression Id. */
  int LESS_THAN_EQUALS = 28;
  /** RegularExpression Id. */
  int GREATER_THAN = 29;
  /** RegularExpression Id. */
  int GREATER_THAN_EQUALS = 30;
  /** RegularExpression Id. */
  int ASSIGN = 31;
  /** RegularExpression Id. */
  int SEMICOLON = 32;
  /** RegularExpression Id. */
  int LEFT_BRACE = 33;
  /** RegularExpression Id. */
  int RIGHT_BRACE = 34;
  /** RegularExpression Id. */
  int LEFT_PAREN = 35;
  /** RegularExpression Id. */
  int RIGHT_PAREN = 36;
  /** RegularExpression Id. */
  int LEFT_BRACKET = 37;
  /** RegularExpression Id. */
  int RIGHT_BRACKET = 38;
  /** RegularExpression Id. */
  int IDENTIFIER = 39;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 40;
  /** RegularExpression Id. */
  int STRING_LITERAL = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"newScanner(System.in).next()\"",
    "\"System.out.println\"",
    "\"if\"",
    "\"else\"",
    "\"for\"",
    "\"while\"",
    "\"return\"",
    "\"void\"",
    "\"int\"",
    "\"String\"",
    "\"boolean\"",
    "\"true\"",
    "\"false\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"&&\"",
    "\"||\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"=\"",
    "\";\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "<IDENTIFIER>",
    "<INTEGER_LITERAL>",
    "<STRING_LITERAL>",
  };

}
